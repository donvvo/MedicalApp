# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import MedicalForms.utils
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_auto_20151107_0557'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('MedicalAppointments', '0007_auto_20151112_1216'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccidentHistory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description_and_location', models.TextField(blank=True)),
                ('road_condition', models.CharField(blank=True, max_length=10, choices=[(b'Dry', b'Dry'), (b'Wet/Rainy', b'Wet/Rainy'), (b'Snow', b'Snow')])),
                ('anticipation_of_accident', models.NullBooleanField()),
                ('time_of_the_day', models.DateTimeField(blank=True)),
                ('patient_vehicle', models.CharField(max_length=30, blank=True)),
                ('patient_vehicle_speed', models.IntegerField(blank=True)),
                ('other_vehicle', models.CharField(max_length=30, blank=True)),
                ('other_vehicle_speed', models.IntegerField(blank=True)),
                ('collision_type', models.CharField(blank=True, max_length=30, choices=[(b'Front-End', b'Front-End'), (b'Side-End', b'Side-End'), (b'Side-Swipe', b'Side-Swipe'), (b'Rear-End', b'Rear-End')])),
                ('vehicle_towed', models.NullBooleanField()),
                ('impact_with_objects', models.CharField(max_length=50, blank=True)),
                ('exit_from_vehicle', models.CharField(blank=True, max_length=30, choices=[(b'Self-powered', b'Self-powered'), (b'Required Assistance', b'Required Assistance')])),
                ('loss_of_consciousness', models.NullBooleanField()),
                ('safety_equipment', models.NullBooleanField()),
                ('airbag_deployed', models.NullBooleanField()),
                ('driver', models.NullBooleanField()),
                ('dominant_hand', models.CharField(blank=True, max_length=20, choices=[(b'Left', b'Left'), (b'Right', b'Right')])),
            ],
        ),
        migrations.CreateModel(
            name='AggravatedByHeadache',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AggravatedByOthers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AggravatedByPeripheralJoint',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateTimeField(blank=True)),
                ('visit_number', models.IntegerField(blank=True)),
                ('clinician', models.CharField(max_length=100, blank=True)),
                ('subjective_choices', models.CharField(blank=True, max_length=15, choices=[(b'Reg.', b'Reg.'), (b'Irreg.', b'Irreg.'), (b'Pain/Cramps', b'Pain/Cramps')])),
                ('subjective_description', models.TextField(blank=True)),
                ('assessment', models.TextField(blank=True)),
                ('objective', models.TextField(blank=True)),
                ('smt', models.TextField(blank=True)),
                ('stt', models.TextField(blank=True)),
                ('cardio', models.CharField(max_length=100, blank=True)),
                ('stretch', models.CharField(max_length=100, blank=True)),
                ('strength', models.CharField(max_length=100, blank=True)),
                ('ifc', models.CharField(max_length=100, blank=True)),
                ('u_s', models.CharField(max_length=100, blank=True)),
                ('heat', models.CharField(max_length=100, blank=True)),
                ('ice', models.CharField(max_length=100, blank=True)),
                ('ohter', models.TextField(blank=True)),
                ('education', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='BodyPart',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Cardiovascular',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Cervical',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('neutral_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('neutral_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('jackson_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('jackson_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('spurling_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('spurling_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hermitte_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hermitte_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('julls_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('julls_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('adson_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('adson_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('wrights_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('wrights_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('edens_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('edens_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('easts_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('easts_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('doorbell_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('doorbell_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
            ],
        ),
        migrations.CreateModel(
            name='Elbow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('flexion_l', models.IntegerField(blank=True)),
                ('flexion_r', models.IntegerField(blank=True)),
                ('extension_l', models.IntegerField(blank=True)),
                ('extension_r', models.IntegerField(blank=True)),
                ('supination_l', models.IntegerField(blank=True)),
                ('supination_r', models.IntegerField(blank=True)),
                ('pronation_l', models.IntegerField(blank=True)),
                ('pronation_r', models.IntegerField(blank=True)),
                ('cozens_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('cozens_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('reverse_cozens_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('reverse_cozens_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('tinels_elbow_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('tinels_elbow_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('tinels_wrist_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('tinels_wrist_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('varus_stress_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('varus_stress_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('valgus_stress_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('valgus_stress_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
            ],
        ),
        migrations.CreateModel(
            name='Gastrointestinal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genitourinary',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='HeadacheQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('intensity', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20, blank=True)),
                ('numbness', models.NullBooleanField()),
                ('paraesthesia', models.NullBooleanField()),
                ('aggravated_by_movements', models.CharField(max_length=100)),
                ('relieved_by', models.NullBooleanField()),
                ('aggravated_by', models.ManyToManyField(to='MedicalForms.AggravatedByHeadache', blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthHistory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('menstrual_flow', MedicalForms.utils.MySelectField(max_length=20, blank=True)),
                ('pregnant', MedicalForms.utils.MyNullBooleanField()),
                ('cnd_disorders', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('current_medications', MedicalForms.utils.MyTextField(blank=True)),
                ('previous_surgeries', MedicalForms.utils.MyTextField(blank=True)),
                ('smoker', MedicalForms.utils.MyNullBooleanField()),
                ('other_conditions', MedicalForms.utils.MyTextField(blank=True)),
                ('family_doctor', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('family_doctor_telephone', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('cardiovascular', models.ManyToManyField(to='MedicalForms.Cardiovascular', blank=True)),
                ('gastrointestinal', models.ManyToManyField(to='MedicalForms.Gastrointestinal', blank=True)),
                ('general', models.ManyToManyField(to='MedicalForms.General', blank=True)),
                ('genitourinary', models.ManyToManyField(to='MedicalForms.Genitourinary', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Knee',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('flexion_l', models.IntegerField(blank=True)),
                ('flexion_r', models.IntegerField(blank=True)),
                ('extension_l', models.IntegerField(blank=True)),
                ('extension_r', models.IntegerField(blank=True)),
                ('internal_rot_l', models.IntegerField(blank=True)),
                ('internal_rot_r', models.IntegerField(blank=True)),
                ('external_rot_l', models.IntegerField(blank=True)),
                ('external_rot_r', models.IntegerField(blank=True)),
                ('varus_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('varus_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('valgus_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('valgus_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('anterior_drawer_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('anterior_drawer_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('posterior_drawer_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('posterior_drawer_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('joint_line_tenderness_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('joint_line_tenderness_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('thesselis_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('thesselis_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('mcmurrays_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('mcmurrays_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('patello_femoral_grind_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('patello_femoral_grind_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('obers_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('obers_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('nobles_comp_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('nobles_comp_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('patellar_comp_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('patellar_comp_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
            ],
        ),
        migrations.CreateModel(
            name='Lumbar',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('slr_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('slr_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('braggarts_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('braggarts_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('bowstring_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('bowstring_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('thomas_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('thomas_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('fig4_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('fig4_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('si_comp_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('si_comp_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('yeomans_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('yeomans_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hibbs_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hibbs_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('gillets_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('gillets_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('sorensons_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
            ],
        ),
        migrations.CreateModel(
            name='LumbarSpineQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('intensity', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20, blank=True)),
                ('numbness', models.NullBooleanField()),
                ('paraesthesia', models.NullBooleanField()),
                ('aggravated_by_movements', models.CharField(max_length=100)),
                ('relieved_by', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MuscleJoint',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MVAIntake',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('gait', models.CharField(blank=True, max_length=10, choices=[(b'Antalgic', b'Antalgic'), (b'Normal', b'Normal')])),
                ('assistive_devices', models.CharField(max_length=100, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherConditions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OtherQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('intensity', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20, blank=True)),
                ('numbness', models.NullBooleanField()),
                ('paraesthesia', models.NullBooleanField()),
                ('aggravated_by_movements', models.CharField(max_length=100)),
                ('relieved_by', models.NullBooleanField()),
                ('radiation', models.NullBooleanField()),
                ('pain_location', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherSubjectiveEvaluationQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('conditions', models.ManyToManyField(to='MedicalForms.OtherConditions', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PassengerLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PatientInformation',
            fields=[
                ('user', models.OneToOneField(primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('complete', models.BooleanField(default=False)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('accident_date', models.DateTimeField(null=True, blank=True)),
                ('date_of_birth', models.DateTimeField(null=True, blank=True)),
                ('gender', MedicalForms.utils.MySelectField(max_length=10, blank=True)),
                ('address', MedicalForms.utils.MyCharField(max_length=200, blank=True)),
                ('city', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('postal_code', MedicalForms.utils.MyCharField(max_length=10, blank=True)),
                ('first_language', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('home_phone', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('mobile_phone', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('work_phone', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('occupation', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('modified_duties_availability', MedicalForms.utils.MyNullBooleanField()),
                ('occupational_status', MedicalForms.utils.MySelectField(max_length=20, blank=True)),
                ('job_requirements', MedicalForms.utils.MySelectField(max_length=20, blank=True)),
                ('marital_status', MedicalForms.utils.MySelectField(max_length=20, blank=True)),
                ('number_of_children', MedicalForms.utils.IntegerRangeField(null=True, blank=True)),
                ('ages', MedicalForms.utils.IntegerRangeField(null=True, blank=True)),
                ('emergency_contact_name', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('emergency_contact_phone', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('emergency_contact_relationship', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('current_complaint_1', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('current_complaint_2', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('current_complaint_3', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('current_complaint_4', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('previous_injury', MedicalForms.utils.MyNullBooleanField()),
                ('previous_injury_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('previous_work_injury', MedicalForms.utils.MyNullBooleanField()),
                ('previous_work_injury_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('previous_sporting_injury', MedicalForms.utils.MyNullBooleanField()),
                ('previous_sporting_injury_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('previous_therapy', MedicalForms.utils.MyNullBooleanField()),
                ('previous_therapy_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('hospitalized', MedicalForms.utils.MyNullBooleanField()),
                ('hospitalized_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
                ('previous_test', MedicalForms.utils.MyNullBooleanField()),
                ('previous_test_detail', MedicalForms.utils.MyCharField(max_length=100, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeripheralJointBaseQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('intensity', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20, blank=True)),
                ('numbness', models.NullBooleanField()),
                ('paraesthesia', models.NullBooleanField()),
                ('aggravated_by_movements', models.CharField(max_length=100)),
                ('relieved_by', models.NullBooleanField()),
                ('radiation', models.NullBooleanField()),
                ('pain_location', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresentPain',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PreviousConditions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReportOfFindings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date_of_assessment', models.DateTimeField(null=True, blank=True)),
                ('presenting_complaint', MedicalForms.utils.MyTextField(blank=True)),
                ('examination_findings', MedicalForms.utils.MyTextField(blank=True)),
                ('diagnosis', MedicalForms.utils.MyTextField(blank=True)),
                ('plan_of_management', MedicalForms.utils.MyTextField(blank=True)),
                ('goals', MedicalForms.utils.MyTextField(blank=True)),
                ('risks_discussed', MedicalForms.utils.MyTextField(blank=True)),
                ('alternatives', MedicalForms.utils.MyTextField(blank=True)),
                ('prognosis', MedicalForms.utils.MyTextField(blank=True)),
                ('estimated_time_for_recovery', MedicalForms.utils.MyCharField(max_length=20, blank=True)),
                ('patient_questions', MedicalForms.utils.MyTextField(blank=True)),
                ('doctor', models.ForeignKey(to='MedicalAppointments.Doctor')),
                ('patient', models.ForeignKey(to='MedicalAppointments.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Respiratory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Shoulder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('flexion_l', models.IntegerField(blank=True)),
                ('flexion_r', models.IntegerField(blank=True)),
                ('extension_l', models.IntegerField(blank=True)),
                ('extension_r', models.IntegerField(blank=True)),
                ('abduction_l', models.IntegerField(blank=True)),
                ('abduction_r', models.IntegerField(blank=True)),
                ('internal_rotation_l', models.IntegerField(blank=True)),
                ('internal_rotation_r', models.IntegerField(blank=True)),
                ('external_rotation_l', models.IntegerField(blank=True)),
                ('external_rotation_r', models.IntegerField(blank=True)),
                ('horizontal_abd_l', models.IntegerField(blank=True)),
                ('horizontal_abd_r', models.IntegerField(blank=True)),
                ('horizontal_add_l', models.IntegerField(blank=True)),
                ('horizontal_add_r', models.IntegerField(blank=True)),
                ('scapulocostal_rhythm_l', models.IntegerField(blank=True)),
                ('scapulocostal_rhythm_r', models.IntegerField(blank=True)),
                ('speeds_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('speeds_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('yergasons_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('yergasons_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('empty_can_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('empty_can_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hornblowers_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hornblowers_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hawkins_kennedy_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('hawkins_kennedy_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('neers_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('neers_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('obriens_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('obriens_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('crank_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('crank_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('load_and_shift_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('load_and_shift_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('anterior_apprehension_l', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('anterior_apprehension_r', models.CharField(blank=True, max_length=1, choices=[(b'+', b'+'), (b'-', b'-')])),
                ('main_form', models.OneToOneField(to='MedicalForms.MVAIntake')),
            ],
        ),
        migrations.CreateModel(
            name='Skin',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ThoracicSpineQuestions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('today_date', models.DateTimeField(auto_now_add=True)),
                ('intensity', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20, blank=True)),
                ('numbness', models.NullBooleanField()),
                ('paraesthesia', models.NullBooleanField()),
                ('aggravated_by_movements', models.CharField(max_length=100)),
                ('relieved_by', models.NullBooleanField()),
                ('present_pain', models.ManyToManyField(to='MedicalForms.PresentPain', blank=True)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeOfPainHeadache',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfPainOthers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WomenOnlyChoices',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('choice', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CervicalSpineQuestions',
            fields=[
                ('otherquestions_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='MedicalForms.OtherQuestions')),
            ],
            options={
                'abstract': False,
            },
            bases=('MedicalForms.otherquestions',),
        ),
        migrations.CreateModel(
            name='PeripheralJointQuestions1',
            fields=[
                ('peripheraljointbasequestions_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='MedicalForms.PeripheralJointBaseQuestions')),
            ],
            options={
                'abstract': False,
            },
            bases=('MedicalForms.peripheraljointbasequestions',),
        ),
        migrations.CreateModel(
            name='PeripheralJointQuestions2',
            fields=[
                ('peripheraljointbasequestions_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='MedicalForms.PeripheralJointBaseQuestions')),
            ],
            options={
                'abstract': False,
            },
            bases=('MedicalForms.peripheraljointbasequestions',),
        ),
        migrations.CreateModel(
            name='PeripheralJointQuestions3',
            fields=[
                ('peripheraljointbasequestions_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='MedicalForms.PeripheralJointBaseQuestions')),
            ],
            options={
                'abstract': False,
            },
            bases=('MedicalForms.peripheraljointbasequestions',),
        ),
        migrations.CreateModel(
            name='PeripheralJointQuestions4',
            fields=[
                ('peripheraljointbasequestions_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='MedicalForms.PeripheralJointBaseQuestions')),
            ],
            options={
                'abstract': False,
            },
            bases=('MedicalForms.peripheraljointbasequestions',),
        ),
        migrations.AddField(
            model_name='peripheraljointbasequestions',
            name='aggravated_by',
            field=models.ManyToManyField(to='MedicalForms.AggravatedByPeripheralJoint', blank=True),
        ),
        migrations.AddField(
            model_name='peripheraljointbasequestions',
            name='present_pain',
            field=models.ManyToManyField(to='MedicalForms.PresentPain', blank=True),
        ),
        migrations.AddField(
            model_name='peripheraljointbasequestions',
            name='type_of_pain',
            field=models.ManyToManyField(to='MedicalForms.TypeOfPainOthers', blank=True),
        ),
        migrations.AddField(
            model_name='peripheraljointbasequestions',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='othersubjectiveevaluationquestions',
            name='users',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='otherquestions',
            name='aggravated_by',
            field=models.ManyToManyField(to='MedicalForms.AggravatedByOthers', blank=True),
        ),
        migrations.AddField(
            model_name='otherquestions',
            name='present_pain',
            field=models.ManyToManyField(to='MedicalForms.PresentPain', blank=True),
        ),
        migrations.AddField(
            model_name='otherquestions',
            name='type_of_pain',
            field=models.ManyToManyField(to='MedicalForms.TypeOfPainOthers', blank=True),
        ),
        migrations.AddField(
            model_name='otherquestions',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mvaintake',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lumbarspinequestions',
            name='present_pain',
            field=models.ManyToManyField(to='MedicalForms.PresentPain', blank=True),
        ),
        migrations.AddField(
            model_name='lumbarspinequestions',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lumbar',
            name='main_form',
            field=models.OneToOneField(to='MedicalForms.MVAIntake'),
        ),
        migrations.AddField(
            model_name='knee',
            name='main_form',
            field=models.OneToOneField(to='MedicalForms.MVAIntake'),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='muscle_joint',
            field=models.ManyToManyField(to='MedicalForms.MuscleJoint', blank=True),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='previous_conditions',
            field=models.ManyToManyField(to='MedicalForms.PreviousConditions', blank=True),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='respiratory',
            field=models.ManyToManyField(to='MedicalForms.Respiratory', blank=True),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='skin',
            field=models.ManyToManyField(to='MedicalForms.Skin', blank=True),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='healthhistory',
            name='woemn_only_choices',
            field=models.ManyToManyField(to='MedicalForms.WomenOnlyChoices'),
        ),
        migrations.AddField(
            model_name='headachequestions',
            name='present_pain',
            field=models.ManyToManyField(to='MedicalForms.PresentPain', blank=True),
        ),
        migrations.AddField(
            model_name='headachequestions',
            name='type_of_pain',
            field=models.ManyToManyField(to='MedicalForms.TypeOfPainHeadache', blank=True),
        ),
        migrations.AddField(
            model_name='headachequestions',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='elbow',
            name='main_form',
            field=models.OneToOneField(to='MedicalForms.MVAIntake'),
        ),
        migrations.AddField(
            model_name='cervical',
            name='main_form',
            field=models.OneToOneField(to='MedicalForms.MVAIntake'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accidenthistory',
            name='body_part_collision',
            field=models.ManyToManyField(to='MedicalForms.BodyPart', blank=True),
        ),
        migrations.AddField(
            model_name='accidenthistory',
            name='passengers',
            field=models.ManyToManyField(to='MedicalForms.PassengerLocation'),
        ),
        migrations.AddField(
            model_name='accidenthistory',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
    ]
